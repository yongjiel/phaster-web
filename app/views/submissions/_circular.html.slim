// Data from png_input

.result

  - if @chart_error.present?
    p.error = @chart_error

  - else
    #plasmid-viewer
      - if @submission.contigs?
        #plasmid-box 
          #plasmid-name = "Contigs"
          #contigs-box[data-info="#{@submission.contig_data.to_json(true)}"]
      - else
        #plasmid-box
          #plasmid-name = @chart[:name]
          plasmid.plasmid#circular_genome sequencelength="#{@chart[:length]}" plasmidheight="600" plasmidwidth="600"
            plasmidtrack.plasmidtrack radius="150"
              // Calculate scale
              - majori = 10**((Math.log10(@chart[:length] / 20).ceil))
              - minori = majori / 5
              trackscale class='sminor' interval="#{minori}"
              trackscale class='sminorin' interval="#{minori}" direction='in'
              trackscale class='smajor' interval="#{majori}" ticksize="6"
              trackscale class='smajorin' interval="#{majori}" ticksize="6" direction='in' showlabels='1' labelclass='sml' labelvadjust='20'

              // Draw regions
              - @chart[:regions].each do |key, region|
                // The main marker
                trackmarker id="region_#{region[:number]}" class="marker #{region[:completeness]}" start="#{region[:start]}" end="#{region[:end]}"
                  markerlabel region="region_#{region[:number]}" class="mlabel #{region[:completeness]}" text="Region #{region[:number]}" vadjust='100' valign="middle" showline="1" lineclass="region_line #{region[:completeness]}_line" linevadjust="-20"

                // The start and end labels
                trackmarker id="region_#{region[:number]}_start" class="marker_border #{region[:completeness]}" start="#{region[:start]}" vadjust="8"
                  markerlabel id="region_#{region[:number]}_start_label" class="blabel #{region[:completeness]}" text="#{region[:start]}" vadjust='45' valign="middle" showline="1" lineclass="border_line #{region[:completeness]}_line" linevadjust="-15" region="region_#{region[:number]}" hadjust="-1"

                trackmarker id="region_#{region[:number]}_start" class="marker_border #{region[:completeness]}" start="#{region[:end]}" vadjust="8"
                  markerlabel id="region_#{region[:number]}_start_label" class="blabel #{region[:completeness]}" text="#{region[:end]}" vadjust='45' valign="middle" showline="1" lineclass="border_line #{region[:completeness]}_line" linevadjust="-15" region="region_#{region[:number]}" hadjust="1"
      #plasmid-info-box
        #plasmid-info data-info="#{@chart[:regions].to_json}"
          | Click on a region to see details.
        #plasmid-legend
          .intact.square
          | Intact (score > 90)
          br
          .questionable.square
          | Questionable (score 70-90)
          br
          .incomplete.square
          | Incomplete (score < 70)
          br
          br
          b Viewer Options
          button#toggle_labels.btn.plasmid-btn.waves-effect.waves-light Hide Region Labels
          button#toggle_lines.btn.plasmid-btn.waves-effect.waves-light Show Label Lines
          button#toggle_markers.btn.plasmid-btn.waves-effect.waves-light Hide Markers
          - unless @submission.contigs?
            button#toggle_sizes.btn.plasmid-btn.waves-effect.waves-light Condense Labels
          button#save_image.btn.plasmid-btn.waves-effect.waves-light data-svg-id="plasmid"
            | Save Image
            i.tiny.material-icons file_download
        #plasmid-length = "Length: #{@chart[:length]} bps"
        #plasmid-phages = "Phages: #{@chart[:regions].length}"

    #linear_viewer.linear_combined
      #linear_charts
        #linear_name
        #linear_placeholder
          div
            i class="material-icons" arrow_upward
            i class="material-icons" arrow_upward
            i class="material-icons" arrow_upward
            br
            | Click on a region in the genome above to show details here.
        // Draw one chart for each region
        - @chart[:regions].each do |key, region|
          .linear_chart[id="#{key}"]
            .linear_options
              .option-region-selection.right
                button#prev-region.btn.plasmid-btn.waves-effect.waves-light
                  i.tiny.material-icons skip_previous
                button#next-region.btn.plasmid-btn.waves-effect.waves-light
                  i.tiny.material-icons skip_next
              .header Viewer Options
              .clear
              .option-col
                button#expand_genome.btn.plasmid-btn.waves-effect.waves-light Expand Genome
                button#toggle_labels.btn.plasmid-btn.waves-effect.waves-light Hide Sequence Labels
              .option-col
                button#toggle_annotated.btn.plasmid-btn.waves-effect.waves-light Show Annotated Only
                button#save_image.btn.plasmid-btn.waves-effect.waves-light
                  | Save Image 
                  i.tiny.material-icons file_download
            .linear_sequence
              | Click on a sequence to see details.
            .linear_box[id="#{key}" data-info="#{region.to_json}"]

            - region[:sequences].each_with_index do |sequence, i|
              .modal.modal-fixed-footer[id="#{sequence[:region]}_linear_#{i}"]
                .modal-content
                  - name = sequence[:protein_name].split(";")[0]
                  - direction = sequence[:strand].to_i > 0 ? "Forward" : "Backward"
                  - homology = sequence[:match].gsub(/_like/, "-like").gsub(/_/, " ").capitalize
                  div[class="header blast_#{sequence[:match]}_header"] = "Locus #{i + 1}: #{name} (#{sequence[:region].gsub("_", " ").capitalize})"

                  b Locus: 
                  = name
                  br
                  b ORF Start: 
                  = sequence[:from]
                  br
                  b ORF Stop: 
                  = sequence[:to]
                  br
                  b Strand: 
                  = direction
                  br
                  b Protein Sequence: 
                  = sequence[:sequence]
                  br
                  b Homolog/Ortholog Species: 
                  = homology
                  br
                  b Homolog/Ortholog Protein: 
                  = sequence[:protein_name].gsub(";", ", ")
                  br
                  b Homolog/Ortholog E-Value: 
                  = sequence[:evalue]

                .modal-footer
                  a.modal-action.modal-close.btn-flat href="#!" Close

      #linear_legend
        .legend_col
          .blast_lysis_protein.square
          | Lysis
          br
          .blast_terminase.square
          | Terminase
          br
          .blast_portal_protein.square
          | Portal Protein
        .legend_col
          .blast_protease.square
          | Protease
          br
          .blast_head_protein.square
          | Coat Protein
          br
          .blast_tail_protein.square
          | Tail Shaft
        .legend_col
          .blast_attachment_site.square
          | Attachment Site
          br
          .blast_integrase.square
          | Integrase
          br
          .blast_phage_like_protein.square
          | Phage-like Protein
        .legend_col
          .blast_hypothetical_protein.square
          | Hypotheical Protein
          br
          .blast_non_phage_like_protein.square
          | Other
          br
          .blast_transposase.square
          | Transposase
        .legend_col
          .blast_fiber_protein.square
          | Fiber Protein
          br
          .blast_plate_protein.square
          | Plate Protein
          br
          .blast_trna.square
          | tRNA

  p
    b Download data as .txt file: 
    = link_to 'png_input <i class="tiny material-icons">file_download</i>'.html_safe, File.join(root_url, 'jobs', @submission.job_id, 'png_input')
